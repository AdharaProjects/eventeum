version: 2

dockerhub_login: &dockerhub_login
  run:
    name: Login to dockerhub
    command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

executorType: machine
jobs:
  build-and-test:
    docker:
      - image: circleci/openjdk:13.0.1-jdk-buster 
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: maven install
          command: mvn clean install -DskipTests

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: dependencies-{{ checksum "pom.xml" }}

      - run:
          name: integration tests
          command: mvn clean verify -DskipIntegrationTests=false

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  release-master:
    machine: true
    steps:
      - checkout
      - *dockerhub_login
      - run:
          name: maven install
          command: mvn clean install -DskipTests
      - run:
          name: Release docker image
          command: chmod +x .scripts/build-docker-image.sh && ./.scripts/build-docker-image.sh latest

  release-snapshot:
    machine: true
    steps:
      - checkout
      - *dockerhub_login
      - run:
          name: maven install
          command: mvn clean install -DskipTests
      - run:
          name: Release docker image
          command: chmod +x .scripts/build-docker-image.sh && ./.scripts/build-docker-image.sh snapshot

  release-tag:
    machine: true
    steps:
      - checkout
      - *dockerhub_login
      - run:
          name: maven install
          command: mvn clean install -DskipTests
      - run:
          name: Release docker image
          command: chmod +x .scripts/build-docker-image.sh && ./.scripts/build-docker-image.sh tag

workflows:
  version: 2
  build:
    jobs:
      - build-and-test:
          context: adhara-global
          filters:
            branches:
              only:
                - /.*/
            tags:
              only:
                - /.*/
      - release-snapshot:
          context: adhara-global
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - development-adhara
            tags:
              only:
                - /.*/
      - release-master:
          context: adhara-global
          requires:
            - build-and-test
          filters:
            branches:
              only: master-adhara
            tags:
              only:
                - /.*/
      - release-tag:
          context: adhara-global
          requires:
            - build-and-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/

